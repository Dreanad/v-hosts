#!/bin/sh

if [ -f /etc/v-hosts/v-hosts.conf ]
then
    . /etc/v-hosts/v-hosts.conf
else
    echo "Configuration file /etc/v-hosts/v-hosts.conf not found"
    exit 1
fi



# functions
addHost () {
  echo -e "$1\t$2" | sudo tee --append /etc/hosts > /dev/null
}

addVirtualHost () {
  baseNameHote=${3%.*}
  sudo cp "apache/default.conf" "apache/$baseNameHote.conf"
  sudo sed -i -e "s,DOCUMENTROOT,$1,g" "apache/$baseNameHote.conf"
  sudo sed -i -e "s,DIRECTORY,$2,g" "apache/$baseNameHote.conf"
  sudo sed -i -e "s,SERVERNAME,$3,g" "apache/$baseNameHote.conf"
  sudo sed -i -e "s,SERVERALIAS,$4,g" "apache/$baseNameHote.conf"
  sudo sed -i -e "s,SERVERADMIN,$5,g" "apache/$baseNameHote.conf"
  sudo mv "apache/$baseNameHote.conf" "/etc/apache2/sites-available/"
}
# v-hosts require root access
if [ "$(whoami)" != "root" ]
  then
    echo "V-hosts require root access, please use sudo to run v-hosts"
    exit
fi
# /functions
# start script add new host in /etc/hosts
echo "***********************************************"
echo "************* Add the new host ****************"
echo "***********************************************"
# Adresse to redirect
read -p "Adresse to redirect [127.0.0.1]: " adresse
if [ -z $adresse ]
then
        adresse='127.0.0.1'
fi
# Hostname
read -p "Hostname (ex: example.com): " hote
while [ -z $hote ]
do
	read -p "Hostname can't be empty, please enter the hostname " hote
done
# Add the virtual host
echo "***********************************************"
echo "************* Add the virtual host ************"
echo "***********************************************"
# Path to documentRoot
read -p "[DocumentRoot] [/var/www/$hote] => " documentRoot
if [ -z $documentRoot ]
then
  documentRoot="/var/www/$hote"
fi
# Path to directory
read -p "[Directory] [$documentRoot] => " directory
if [ -z $directory ]
then
  directory="/var/www/$hote"
fi
# ServerName
read -p "[ServerName] [$hote] => " serverName
if [ -z $serverName ]
then
  serverName="$hote"
fi
# ServerAlias type array for multiple alias
serverAlias=()
while [ 1 ];do
  read -p "[ServerAlias] (ex: www or empty to continue) => " serverAliasName
  if [ ! -z $serverAliasName ]
  then
    serverAlias+="$serverAliasName.$hote "
  else
    break
  fi
done
# ServerAdmin mail adress
read -p "[ServerAdmin] [admin@$hote] => " serverAdmin
if [ -z $serverAdmin ]
then
  serverAdmin="admin@$hote"
fi
# Confirmation
echo "***********************************************"
echo "**************** Confirmation *****************"
echo "***********************************************"
echo "Hosts =>"
echo "$adresse    $hote"
for element in ${serverAlias[@]}
do
  echo "$adresse    $element"
done
echo "VirtualHost =>"
echo "DocumentRoot: $documentRoot"
echo "Directory:    $directory"
echo "ServerName:   $serverName"
echo "ServerAlias:  ${serverAlias[@]}"
echo "ServerAdmin:  $serverAdmin"

while [ 1 ];do
  read -p "Confirmation [y/n]" confirm
  case "$confirm" in
    OUI | Oui | oui | o | YES | Yes | yes | y )
      echo -e "# V-hosts pour : $hote" | sudo tee --append /etc/hosts > /dev/null
      addHost "$adresse" "$hote"
      if [ -n "$serverAlias" ]; then
        for element in ${serverAlias[@]}
        do
          addHost "$adresse" "$element"
        done
      fi
	    addVirtualHost "$documentRoot" "$directory" "$serverName" "$serverAlias" "$serverAdmin"
      break
    ;;
    NON | Non | non | NO | No | no | n )
      exit 1
      break
    ;;
    *)
      echo "Unrecognized response, response awaited yes or no "
    ;;
  esac
done
# to create folder in documentRoot place and initialize a git empty project
while [ 1 ];do
  read -p "Create folder $documentRoot ? [y/n]" createDir
  case "$createDir" in
    OUI | Oui | oui | o | YES | Yes | yes | y )
      sudo mkdir $documentRoot && touch "$documentRoot/index.html"
      echo  "<h1>Thank you to use v-host !</h1>" >> $documentRoot/index.html
      while [ 1 ];do
        read -p "Initialiser un repository git ? [y/n]" gitInit
        case "$gitInit" in
          OUI | Oui | oui | o | YES | Yes | yes | y )
            cd $documentRoot && sudo git init
            break
          ;;
          NON | Non | non | NO | No | no | n )
            break
          ;;
          *)
            echo "Unrecognized response, response awaited yes or no "
          ;;
        esac
      done
      break
    ;;
    NON | Non | non | NO | No | no | n )
      break
    ;;
    *)
      echo "Unrecognized response, response awaited yes or no "
    ;;
  esac
done
# Enable the conf and restart apache2
while [ 1 ];do
  read -p "Do you want to enable the conf and restart Apache2 ? [y/n]" enableAndRestart
  case "$enableAndRestart" in
    OUI | Oui | oui | o | YES | Yes | yes | y )
      baseNameHote=${hote%.*}
      sudo a2ensite "$baseNameHote.conf"
      sudo /etc/init.d/apache2 reload
      break
    ;;
    NON | Non | non | NO | No | no | n )
      break
    ;;
    *)
      echo "Unrecognized response, response awaited yes or no "
    ;;
  esac
done
